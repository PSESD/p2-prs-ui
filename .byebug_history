exit
District.find(params[:district_id] || params[:id]).first
params[:id]
params
exit
redirect_to @district
format.html { redirect_to @district, notice: 'District was successfully updated.' }
@district
exit
District.find(43).first
District.find(43)
params[:district_id] || params[:id]
params[:district_id]
params[:id]
params
exit
District::Service.all(district_id: @district.id).items
District::Service.all(district_id: @district.id)
@district.id
@district
exit
@service.class
@services.class == ActiveRestClient::ResultIterator
@services.class == "ActiveRestClient::ResultIterator"
@services.class == ActiveRestClient::ResultIterator
District::Service.all(district_id: @district.id).class
District::Service.all(district_id: @district.id)
@district.id
@district
exit
District.find("43")
District.find(43)
params[:id]
@district
exit
District.find(id: 43)
@district = JSON.parse(@district)
@district = put("districts/#{@district.id}", district_params_json)
@district = JSON.parse(@district)
exit
n
@district
n
put("districts/#{@district.id}", district_params_json)
exit
District.find(params[:district_id] || params[:id]).first
District.find(params[:district_id] || params[:id]).items.first
District.find(params[:district_id] || params[:id]).items
District.find(params[:district_id] || params[:id])
District.find(params[:district_id] || params[:id]).first
params[:id]
params
exit
URI::HTTPS.build(url: url).to_s
URI::HTTPS.build(url: url)
URI::HTTPS.build(host: url, protocol: "http://")
URI::HTTPS.build(host: url, protocol: "http://"))
URI::HTTPS.build(host: "https://www.yes.com")
URI::HTTPS.build(host: temp_url)
temp_url = "http://localhost:3000"
URI::HTTPS.build(host: url)
url
URI::HTTPS.build(host: url).to_s
exit
n
authorized_entity_service_path(authorized_entity_id: @authorized_entity.id, id: authorized_entity_service.id)
exit
authorized_entity_service.count
authorized_entity_service
service
exit
@authorized_entity_services.each { |authorized_entity_service| authorized_entity_service }
@authorized_entity_services.each do |authorized_entity_service|
@authorized_entity_services
exit
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).items
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id)
@authorized_entity
exit
AuthorizedEntity::Service.all
exit
AuthorizedEntity::Service.all_from_all
exit
n
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first
exit
@authorized_entity_services = AuthorizedEntity::Service.all
@authorized_entity_services = AuthorizedEntity::Service.all_from_all
@authorized_entity_services
exit
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).items
exit
Rails.application.secrets.prs_context_id
Rails.application.secrets.prs_zone_id
Rails.application.secrets.prs_shared_secret
Rails.application.secrets.prs_session_token
SessionToken
exit
service.class
service
service.name
exit
URI::HTTPS.build(host: service.url)
URI::HTTPS.build(host: service.url).to_s
org.full_url
org.url
org = service.ssl_organization
service.url
exit
service.ssl_organization.full_url
service.ssl_organization.url
service.ssl_organization
service
exit
@services.last
@services.last\
@services.count
@services = AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).items.count
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).items
@services
@authorized_entity.services
@authorized_entity = AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first
@authorized_entity = _
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first.class
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first
exit
render partial: "authorized_entities/services/service", collection: @services
@services.count
@services.class
@services
exit
@district
exit
@district
district_params[:id]
@district
exit
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).items
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id).class
AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id)
@authorized_entity.id
@authorized_entity
exit
service.ssl_organization.full_url
service.ssl_organization.url
service.ssl_organization
service.description
exit
service.name
service.description
service
exit
DataSet.find(params[:data_set_id] || params[:id]).items.first.id
DataSet.find(params[:data_set_id] || params[:id]).items.first
exit
DataSet.find(params[:data_set_id] || params[:id]).items.first
exit
DataSet.find(params[:data_set_id] || params[:id]).items.first
exit
response.headers
request.headers.to_h.keys.sort
request.headers.to_h.keys
request.headers.to_h
request.headers.to_a
request.headers.to_a.keys
request.headers.keys
request.headers.authorization
request.headers.Authorization
request.headers["Authorization"]
request.headers
exit
@service
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first.items
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first.class
AuthorizedEntity.find(params[:authorized_entity_id] || params[:id]).first
exit
Rails.application.secrets.prs_session_token
SessionToken
exit
AuthorizedEntity::Service.all_from_all
AuthorizedEntity::Service.all
AuthorizedEntity::Service.all_from_all
exit
url
n
json_params
path
n
authorized_entity_params.to_json
s
post("authorized_entities", authorized_entity_params_json)
@authorized_entity
exit
authorized_entity_params_xml
authorized_entity_params_json
authorized_entity_params
exit
authorized_entity_params_xml
authorized_entity_params_json
authorized_entity_params
exit
authorized_entity_params
exit
authorized_entity_params.to_json
s
exit
post("authorized_entities", authorized_entity_params_json)
@authorized_entity
exit
http
exit
web[:http]
header
web[:http].request(request).body
request.body
n
request
n
web
n
json_params
path
exit
@district
n
http.request(request).body
request.body
n
uri
n
url
exit
district_params_json
district_params.to_json
http.request(request).body
request.body
exit
http.request(request).body
request.body
district_params_xml
exit
district_params_xml
district_params.class
district_params
request.body
exit
Time.now.utc.iso8601(3)
exit
Time.now.utc.iso8601(3).to_s
Time.now.utc.iso8601(3)
exit
http.request(request).body
exit
request.headers.storeexit
request.headers.store
