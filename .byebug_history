exit
services.first.first.items
services.first.first
services.first.items
services.first.count
services.first
services.count
services.class
services.first
services
exit
services.first.items.count
services.first.items.conut
services.first.items
services.first
services.class
services
services.first.items.first.authorizedEntityId
services.first.items.first
services.first.items.externalServiceID
services.first.items.externalServiceId
services.first.items
services.first
services = district.items.first.services_full
exit
s
s = district.items.first.services_full
exit
s
s = _
district.items.first.services_full.first
district.items.first.services_full.count
exit
district.items.first.services_full.class
district.items.first.services_full
district.items.first.services
district.items.first
@district_services[district.items.first.name]
exit
a.items.first
a.personnels
a.services
a
exit
item
a.personnels
a.services
a
exit
exiyt
f.input :externalServiceId, label: "External Service", as: :grouped_select, collection: AuthorizedEntity.all_full
f.input :externalServiceId, label: "External Service", as: :grouped_select
f.input :externalServiceId, label: "External Service", as: :grouped_select, collection: AuthorizedEntity.all_full, group_method: :services
f.input :externalServiceId, label: "External Service", as: :grouped_select, collection: AuthorizedEntity.all_full, group_method: :services, value_method: :id, prompt: "-- Please select --" 
exit
a.items.count
a.items
a
exit
a
exit
@district
@service
exit
@service
@servic
params
@service.externalServiceId
n
@service
n
exit
district.name
district
exit
reload!
reload@
district.try(:name)
district.name
district.districtName
district
exit
@district.id
@district
exit
link_to authorized_entity.name, authorized_entity_path(1)
link_to authorized_entity.name, 1
link_to authorized_entity.name, authorized_entity
exit
authorized_entity.authorizedEntityName
authorized_entity
exit
authorized_entity.name
authorized_entity
exit
authorized_entity.authorizedEntityName
authorized_entity.name == "Super Organization"
authorized_entity.mainContact
authorized_entity.name
authorized_entity.id
authorized_entity
exit
District::Service.all(district_id: @district.id)
@district.id
@district
exit
service.name
service.authorizedEntityName
service
exit
district.items.first.districtServices
district.items.first.services
district.items.first.keys
district.items.first
exit
n
exit
d.first.items.last.services
d.first.items.first.services
d.first.items
d.count
d.first
d
d.items
d.services
d.first.items.first.districtName
d.first.items.first.name
districtName
d.first.items.name
d.first.items.count
d.last.items.count
d.last.items
d.first.items
d.first
d.first.class
d.last.class
d.count
d.class
d = District.all_full
exit
@service.district_services
exit
@service.district_services.keys
@service.district_services.class
@service.district_services
@service
exit
service
service.authorizedEntityName
exit
service.districtId
service.districtID
service.items
service.first
service
exit
district_params_xml
@xml
self.class.class
self.class
self
exit
district_params
district_params_xml
params
exit
params["srx_data"]
params.srx_data
params
exit
district_params
params
exit
District.all.districts.class
District.all.district.class
District.all.districts
District.all.districts.items
District.all.districts.item
District.all.districts
District.all
@districts
n
exit
@districts.district.items
@districts.items
@districts.district
@districts.districts
district
@districts
exit
@districts.districts
@districts.each { |d| puts d.id }
@districts.each do |d|
@districts
exit
@districts
n
District.all
exit
render @district
render :lazy_create
response.text
response.headers
response.body
@district.inspect
puts @district
request.body.read
request.body
@district.body
exit
district_params_xml
exit
District.new.method(:lazy_create).call
District.send(:lazy_create)
Districts.send(:lazy_create)
DistrictsController.send(:lazy_create)
DistrictsController.send(:lazy_create))
DistrictsController.send(@district)
self.class
self
exit
method.call(:lazy_create)
@district
exit
District.post(:create, nil, district_params_xml)
district_params_xml
exit
District.post(:create, nil, JSON.parse(district_params.to_json).to_xml(root: :districts))
district_params
@district
@district.id
@district.post(:create, 1, JSON.parse(district_params.to_json).to_xml(root: :districts))
@district.id
@district.post(:create, nil, JSON.parse(district_params.to_json).to_xml(root: :districts))
exit
url_params
exit
@district.create
request.headers["Body"] = xml
xml = request.headers["body"] = JSON.parse(district_params.to_json).to_xml(root: :districts)
district_params
request.headers["Body"]
request.headers["Accept"]
request.headers.accept
request.headers
request
response.headers
response.accept
response.header
response.body
response
exit
JSON.parse(district_params.to_json).to_xml(root: :districts)
JSON.parse(district_params.to_json).to_xml
JSON.parse(district_params.to_json).class
JSON.parse(district_params.to_json)
