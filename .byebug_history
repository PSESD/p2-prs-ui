exit
arg[1].title
arg[1].to_label
arg[1].name
arg[1].class
arg.first.to_model == arg.first
arg.first.to_model
arg.first
arg.last.respond_to?(:title)
arg.last.respond_to?(:name)
arg.last.respond_to?(:to_label)
arg.last.to_s.titleize
arg.last.class
title
exit
arg.first.name
arg.name
arg
arg.last
arg.last.name
arg
arg.name
title
exit
arg.class
arg.name
arg.class
arg
arg.respond_to?(:title)
arg.respond_to?(:name)
arg.respond_to?(:to_label)
arg.respond_to?(to_label)
arg
label_text.to_method
label_text
label_text = arg.try(methods.find{ |m| arg.respond_to?(m) })
methods
n
methods
arg
exit
title
arg
arg.last
title
arg
arg.first.concat content_tag(:li, link_to(guess_label_text(arg), arg))
arg.first.class
arg
title
exit
n
@services
 AuthorizedEntity::Service.all(authorized_entity_id: @authorized_entity.id)
@authorized_entity.id
@authorized_entity
@services
exit
@districtexit
@district.keys
@district.services
@district
n
exit
@district
@services
exit
@district.first
@district[0].id
@district[0]
@district.class
@district.mainContact
@district.title
@district.id
@district
District.all
exit
get :all, url
url
self.model_url
model_url
get :all, "/districts;zoneId=#{ENV["PRS_ZONE_ID"]};contextId=#{ENV["PRS_CONTEXT_ID"]}"
exit
model_url
url
get :all, url
exit
"#{url}"
#{url}
url
exit
method.call(:lazy_all)
get :all, District.model_url
get :all, self.model_url
get :all
self.model_url
District.model_url
District.url
District.all
get :all, self.model_url
get :all self.model_url
District.first
District.all
exit
Rails.application.secrets.prs_context_id
Rails.application.secrets.prs_zone_id
exit
ENV["PRS_CONTEXT_ID"]
ENV["PRS_ZONE_ID"]
District.all
District.url
get :all
exit
response.status
exit
request.keys
request
request.class?
request.env['Messagetype']
request.env['messagetype']
request.env['status']
request.env
server_ip
response.headers
response.header
response.class
response.is_a? Array
response.has_header?(status)
response.has_header? status
response.has_header?
response.has_headers?
response.body
response.status
response
exit
response.body
response.status
response.headers
response.messagetype
response.message\type
response.message_type
response.message
response.status
response.has_header?
response.get_header
response.keys.sort
response
response.header
response.body
