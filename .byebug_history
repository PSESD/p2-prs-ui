exit
district_params_xml
@xml
self.class.class
self.class
self
exit
district_params
district_params_xml
params
exit
params["srx_data"]
params.srx_data
params
exit
district_params
params
exit
District.all.districts.class
District.all.district.class
District.all.districts
District.all.districts.items
District.all.districts.item
District.all.districts
District.all
@districts
n
exit
@districts.district.items
@districts.items
@districts.district
@districts.districts
district
@districts
exit
@districts.districts
@districts.each { |d| puts d.id }
@districts.each do |d|
@districts
exit
@districts
n
District.all
exit
render @district
render :lazy_create
response.text
response.headers
response.body
@district.inspect
puts @district
request.body.read
request.body
@district.body
exit
district_params_xml
exit
District.new.method(:lazy_create).call
District.send(:lazy_create)
Districts.send(:lazy_create)
DistrictsController.send(:lazy_create)
DistrictsController.send(:lazy_create))
DistrictsController.send(@district)
self.class
self
exit
method.call(:lazy_create)
@district
exit
District.post(:create, nil, district_params_xml)
district_params_xml
exit
District.post(:create, nil, JSON.parse(district_params.to_json).to_xml(root: :districts))
district_params
@district
@district.id
@district.post(:create, 1, JSON.parse(district_params.to_json).to_xml(root: :districts))
@district.id
@district.post(:create, nil, JSON.parse(district_params.to_json).to_xml(root: :districts))
exit
url_params
exit
@district.create
request.headers["Body"] = xml
xml = request.headers["body"] = JSON.parse(district_params.to_json).to_xml(root: :districts)
district_params
request.headers["Body"]
request.headers["Accept"]
request.headers.accept
request.headers
request
response.headers
response.accept
response.header
response.body
response
exit
JSON.parse(district_params.to_json).to_xml(root: :districts)
JSON.parse(district_params.to_json).to_xml
JSON.parse(district_params.to_json).class
JSON.parse(district_params.to_json)
district_params
district_params.to_xml
exit
JSON.parse district_params.to_json
district_params.to_json
district_params.class
district_params
exit
district.id
district
exit
district_service_path(district_id: service.districtId, id: service.id)
district_service_path(service)
exit
edit_district_service_path(district_id: service.districtId, id: service.id)
edit_district_service_path(district_id: service.districtId, id: service.is)
service.districtId
service
edit_district_service_path(service)
service.id
service
exit
district_service_path(service)
district_service_path
exit
District::Service.all(district_id: 3).class
@district
params[:district_id]
params
params[:service][:district_id]
params
District::Service.all(district_id: 3)
District::Service.all(id: 3)
District::Service.all(3)
District::Service.all
exit
updated_attributes
exit
District.new(ActionDispatch::ParamsParser.new(district_params))
ActionDispatch::ParamsParser.new(district_params)
ActionDispatch::ParamsParser.new(district_params))
ActionDispatch::ParamsParser.new(@district).create
ActionDispatch::ParamsParser.new(@district)
@district
JSON.parse @district_params.to_json
District.new district_params.to_json
district_params.to_json
district_params
exit
@district.mainContact.class
@district.mainContact
@district
exit
@district.create
@district.mainContact.class
@district.mainContact
@district.mainContact = @district.mainContact.as_json
@district.mainContact.as_json
@district.name.class
@district.name
district_params.class
@district.mainContact.as_json.class
@district.mainContact.as_json
ActionController::Parameters.methods.sort
@district.mainContact.class
@district.mainContact
@district.main_contact
@district.to_json
@district
exit
@district.name.to_xml
@district.to_json.to_xml
@district.to_xml
@district.to_json
@district
main_contact
@main_contact
@district.create
@district
n
@district
district_params
'district_params
exit
id
authorizedEntityId
exit
render partial: "authorized_entities/services/service", collection: @services.items
render partial: "authorized_entities/:authorizedEntityId/services/:id", collection: @services.items
render partial: "authorized_entities/:authorizedEntityId/service/:id", collection: @services.items
render partial: "authorized_entities/1/services/:id", collection: @services.items
@services.id
@services
@authorized_entity.services
@authorized_entity.id
@authorized_entity.it
@authorized_entity
exit
@services.items.first.authorized_entity_id
@services.items.authorized_entity_id
@services.items
@services
:authorized_entity_id
exit
@service.items.first
@service.items.count
@service.class
@service = District::Service.find(district_id: @district.id, id: params[:service_id])
exit
@student.items.count
@student.items
@student.class
@student = District::Student.find(district_id: @district.id, service_id: params[:service_id], id: params[:id])
exit
@data_object.items
@data_object.class
@data_objects.class
@data_object = DataSet::DataObject.find(data_set_id: @data_set.id, id: params[:id])
exit
params[:id]
params[:id[
@data_set.id
@data_object = DataSet::DataObject.find(data_set_id: @data_set.id, id: params[:id])
exit
render partial: "_authorized_entities/:authorized_entity_id/services/:id"
render partial: "authorized_entities/:authorized_entity_id/services/:id"
@services.items
@services
exit
@data_set.items.first.dataObjects
@data_set.items.first.class
@data_set.items.count
@data_set.items
@data_set.class
@data_set
exit
l Date.parse(student.consent.startDate), format: :short_date
Date.parse(student.consent.startDate)
student.consent.startDate
Date.parse(student.consent.try(:co
student.consent
student
exit
District::Student.all(district_id: districtId, service_id: id)
exit
@service.dataSets.items.first.id
@service.dataSets.items.first
@service.dataSets.items.count
@service.dataSets.items
@service.dataSets.items.first.name
@service.dataSets.items
h(@service.dataSets.items.first.name)
h(@service.datasets.items.first.name)
h(dataset.name)
exit
