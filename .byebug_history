exit
n
name.to_sym
@attributes
name
n
name
args.first
name
n
args
name
n
key
n
request.parameters
s
n
exit
@service.externalServiceId = params[:externalServiceId]
@service.externalServiceId
@service.new_record
@service.new_record = true
@service.new_record
@service
n
params
exit
args
*args
n
params[:externalServiceId]
n
@service
params
exit
service.authorized_entity.id
service.authorized_entity.name
service.authorized_entity
service
exit
AuthorizedEntity.find("authorizedEntities/#{service.authorizedEntityId}")
AuthorizedEntity.find("authorizedEntities/#{service.authorizedEntityId})
AuthorizedEntity.find(service.authorizedEntityId)
AuthorizedEntity.find(service.authorizedEntityId).first.name
service.authorizedEntityId
service.name
service.authorizedEntity
service
n
exit
service_params_json
exit
service_params_xml
service_params_json
{"externalServiceId"=>"3", "initiationDate"=>"2017-02-01", "expirationDate"=>"2017-02-28", "dataSet"=>[{"id"=>"1", "name"=>"Demographics"}], "requiresPersonnel"=>"false", "district_id"=>"157"}
service_params
service_params_json
exit
params[:service]
exit
params[:service]
exit
service_params
exit
params
exit
params
exit
JSON.parse(service_params_json)
@district.id
service_params_json
service_params
exit
contact.hash
contact
exit
Date.strptime(d, '%m-%d-%Y')
d = Date.parse(consent["startDate"])
Date.parse(consent["startDate"])
consent["startDate"]
consent["startDate]
Date.strptime(consent["startDate"], '%m-%d-%Y')
Date.parse(consent["startDate"])
consent
exit
self
exit
districts_student_params
districts_student_params.delete("service_id")
districts_student_params
districts_student_params.delete(:service_id)
districts_student_params
districts_student_params.delete(:formConsent)
student = http_request("put", "/districts/#{@district.id}/services/#{@service.id}/students/#{@student.id}", districts_student_params_json)
districts_student_params
set_params
districts_student_params
exit
districts_student_params
n
districts_student_params
district_student_params
exit
self.consent
self
@attributes
n
attrs
s
attributes
s
attr_hashes.map { |attributes| self.new(attributes) }
   29:     end
   28:       self.new(attributes)
attr_hashes.map do |attributes|
s
create_objects(attr_hashes)
n
route
s
s = District::Student.all(route)
exit
@service.students
@service.student
@service
@students
exit
@service.id
@service.students
@service
@students
exit
@students
exit
JSON.parse(districts_student_params_json)
params = [districts_student_params_json]
JSON.parse(districts_student_params_json)
@student.id
districts_student_params_json
=> 90: 
districts_student_params_json)
PrsModel.headers
PRS.headers
"/districts/#{@district.id}/services/#{@service.id}/students/#{@student.id}"
student
n
districts_student_params_json
exit
headers
exit
create_objects(object_hash)
object_hash
exit
district
exit
{}.to_s
attributes
n
attributes
n
attributes
n
attributes
n
attributes
s
exit
attrs
n
attr_hashes
s
create_objects(object_hash)
object_hash
exit
attrs
exit
create_objects(nil)
@attributes
attributes
a_key
exit
d.id
d.name
d = self.new([["id", "113"], ["name", "something"], ["ncesleaCode", "something"], ["zoneId", "something"], ["mainContact", {}]])
d = _
self.new([["id", "113"], ["name", "something"], ["ncesleaCode", "something"], ["zoneId", "something"], ["mainContact", {}]])
attr_hashes.map { |h| h }
   30:     end
   29:       self.new(attributes)
  attr_hashes.map do |attributes|
d.name
d = self.new(attr_hashes)
self.new(attr_hashes)
attr_hashes
s
JSON.parse(object_hash.to_json)
object_hash
object_hash.to_json
create_objects(JSON.parse(object_hash))
create_objects(object_hash)
n
response.parsed_response
response
n
body
exit
student_filtered = District::Student.filters("/filters", header_params(student.districtStudentId))
student.districtStudentId
student.districtId
student.studentDistrictId
student
exit
student
studentDistrictId
exit
render html: layout: "layouts/modal", locals: { id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student }exit
render html: layout: "layouts/modal", locals: { id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student }
render partial: "districts/students/filters", format: 'json', layout: "layouts/modal", locals: { id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student }
student.districtStudentId
student
}student
id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student
render partial: "districts/students/filters", format: 'json', layout: "layouts/modal", locals: {
}
id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student
render partial: "districts/students/filters", format: 'json', layout: "layouts/modal", locals: {
   19: 
   18: id: "filtersModal", title: "Compiled Filter Rules", dialog_class: "modal-lg", student: student
render partial: "districts/students/filters", format: 'json', layout: "layouts/modal", locals: {
exit
@student_filtered
locals
exit
self.class.class
self.class
self
exit
filters_district_service_student_path(district_id: @district.id, service_id: @service.id, id: 1)
filters_district_service_student_path(district_id: @district.id, service_id: @service.id, id: student.id)
@filters
exit
contact_information(@authorized_entity.main_contact_object)
@authorized_entity.main_contact_object
exit
contact_information(@district.main_contact_object)
@district.main_contact_object
exit
contact.name
Contact.name
contact
exit
Contact.new
@district.mainContactObject = Contact.new
@district.mainContactObject
exit
